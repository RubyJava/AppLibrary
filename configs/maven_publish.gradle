apply plugin: "maven-publish"

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

def isPublishingRelease = gradle.mavePublishingRelease
def destinationOutputDir = 'build/outputs/aar' // aar文件输出的文件路径
publishing {
    publications {
        maven(MavenPublication) {
            groupId "${gradle.maveGroupId}"
            artifactId "${project.name.toLowerCase()}"
            version "${project.version}"

            // 指定将build之后的的aar文件路径：build/outputs/aar/xxx-release.aar
            artifact "${destinationOutputDir}/${project.name}-release.aar"
            artifact sourcesJar

            // 将module中的dependencies生成pom文件
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if (it.group != null
                            && !it.group.startsWith("androidx") // androidx下的包不放入pom文件中
                            && it.group != getRootProject().name
                            && it.name != null
                            && it.name != "unspecified"
                            && it.version != null) {
                        // 手动添加dependencies下的依赖到pom文件中
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'implementation')
                    }
                }
            }
        }


    }
    repositories {
        maven {
            // 根据版本配置不同的仓库地址
            if (isPublishingRelease) {
                url = "${gradle.maveUrlRelease}"
//                credentials {
//                    username = System.getenv('OSS_USER')
//                    password = System.getenv('OSS_PASSWORD')
//                }
            } else {
                url = "${gradle.maveUrlSnapshot}"
            }
        }
    }
}
